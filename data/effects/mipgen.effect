// OBS provided.
uniform float4x4 ViewProj;

// Parameters
uniform texture2d image;
uniform float2    image_size;
uniform float2    image_texel;
uniform int       image_level;

sampler_state smp_linear {
	Filter    = Linear;
	AddressU  = Clamp;
	AddressV  = Clamp;
};

struct FunctionData {
	float4 pos : POSITION;
	float2 uv  : TEXCOORD0;
};

FunctionData vertex_shader(FunctionData v) {
	v.pos = mul(float4(v.pos.xyz, 1.0), ViewProj);
	return v;
}

float4 pixel_shader(FunctionData v) : TARGET {
	float2 uv = v.uv;
	uv *= image_size;
	uv = floor(uv * .5) * 2. + float2(1.,1.);
	uv *= image_texel;

	return image.SampleLevel(smp_linear, uv, image_level);
}

technique Draw
{
	pass
	{
		vertex_shader = vertex_shader(v);
		pixel_shader  = pixel_shader(v);
	}
}
